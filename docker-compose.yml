version: '3.8'

services:
  # üê∞ Message Queue
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rentacar-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      - rentacar-network

  # üö™ API Gateway
  gateway:
    build:
      context: .
      dockerfile: ./gateway/Dockerfile
    container_name: rentacar-gateway
    restart: unless-stopped
    ports:
      - "3000:3000"  # Main entry point
    environment:
      PORT: 3000
      AUTH_SERVICE_URL: http://rentacar-auth-service:5001
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:3001}
      NODE_ENV: ${NODE_ENV:-development}
    depends_on:
      - auth-service
    networks:
      - rentacar-network

  # üîê Authentication Service
  auth-service:
    build:
      context: .
      dockerfile: ./services/auth-service/Dockerfile
    container_name: rentacar-auth-service
    restart: unless-stopped
    expose:
      - "5001"  # Internal port only
    environment:
      MONGODB_URI: ${MONGODB_URI}
      PORT: 5001
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRE: ${JWT_EXPIRE}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      RABBITMQ_URI: amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672
    depends_on:
      - rabbitmq
    networks:
      - rentacar-network

networks:
  rentacar-network:
    driver: bridge